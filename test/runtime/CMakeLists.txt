function(halide_define_runtime_internal_test NAME)
    add_executable(runtime_internal_${NAME} ${NAME}.cpp)
    target_link_libraries(runtime_internal_${NAME} PRIVATE Halide::Test)
    target_include_directories(runtime_internal_${NAME} PRIVATE "${Halide_SOURCE_DIR}/src")

    target_link_libraries(runtime_internal_${NAME} PRIVATE Halide::Runtime)
    set_target_properties(runtime_internal_${NAME} PROPERTIES ENABLE_EXPORTS TRUE)
    target_compile_options(runtime_internal_${NAME} PUBLIC -Wno-builtin-declaration-mismatch )
    target_compile_definitions(runtime_internal_${NAME} PUBLIC HALIDE_VERSION=${Halide_VERSION}  )
    target_compile_definitions(runtime_internal_${NAME} PUBLIC HALIDE_VERSION_MAJOR=${Halide_VERSION_MAJOR} )
    target_compile_definitions(runtime_internal_${NAME} PUBLIC HALIDE_VERSION_MINOR=${Halide_VERSION_MINOR} )
    target_compile_definitions(runtime_internal_${NAME} PUBLIC HALIDE_VERSION_PATCH=${Halide_VERSION_MINOR} )
    target_compile_definitions(runtime_internal_${NAME} PUBLIC COMPILING_HALIDE_RUNTIME )
    target_compile_definitions(runtime_internal_${NAME} PUBLIC COMPILING_HALIDE_RUNTIME_TESTS )
    target_include_directories(runtime_internal_${NAME} PRIVATE "${Halide_SOURCE_DIR}/src/runtime")
    add_halide_test(runtime_internal_${NAME} GROUPS runtime_internal)
endfunction()

halide_define_runtime_internal_test(block_allocator)
halide_define_runtime_internal_test(block_storage)
halide_define_runtime_internal_test(linked_list)
halide_define_runtime_internal_test(memory_arena)
halide_define_runtime_internal_test(string_storage)
halide_define_runtime_internal_test(string_table)
